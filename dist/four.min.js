"use strict";var FOUR=FOUR||{};FOUR.Viewcube=function(){function Viewcube(elementId){THREE.EventDispatcher.call(this),this.FACES={TOP:0,FRONT:1,RIGHT:2,BACK:3,LEFT:4,BOTTOM:5,TOP_FRONT_EDGE:6,TOP_RIGHT_EDGE:7,TOP_BACK_EDGE:8,TOP_LEFT_EDGE:9,FRONT_RIGHT_EDGE:10,BACK_RIGHT_EDGE:11,BACK_LEFT_EDGE:12,FRONT_LEFT_EDGE:13,BOTTOM_FRONT_EDGE:14,BOTTOM_RIGHT_EDGE:15,BOTTOM_BACK_EDGE:16,BOTTOM_LEFT_EDGE:17,TOP_FRONT_RIGHT_CORNER:18,TOP_BACK_RIGHT_CORNER:19,TOP_BACK_LEFT_CORNER:20,TOP_FRONT_LEFT_CORNER:21,BOTTOM_FRONT_RIGHT_CORNER:22,BOTTOM_BACK_RIGHT_CORNER:23,BOTTOM_BACK_LEFT_CORNER:24,BOTTOM_FRONT_LEFT_CORNER:25},this.MODES={SELECT:0,READONLY:1},this.OFFSET=250,this.ROTATION_0=0,this.ROTATION_90=Math.PI/2,this.ROTATION_180=Math.PI,this.ROTATION_270=1.5*Math.PI,this.ROTATION_360=2*Math.PI,this.COMPASS_COLOR=6710886,this.COMPASS_OPACITY=.8,this.FACE_COLOUR=4874096,this.FACE_OPACITY_MOUSE_OFF=0,this.FACE_OPACITY_MOUSE_OVER=.8,this.backgroundColor=new THREE.Color(0,0),this.camera=null,this.compass=null,this.control=null,this.cube=null,this.domElement=document.getElementById(elementId),this.elementId=elementId,this.fov=60,this.mouse=new THREE.Vector2,this.raycaster=new THREE.Raycaster,this.renderer=null,this.scene=new THREE.Scene}return Viewcube.prototype=Object.create(THREE.EventDispatcher.prototype),Viewcube.prototype.constructor=Viewcube,Viewcube.prototype.init=function(){var self=this;self.renderer=new THREE.WebGLRenderer({alpha:!0,antialias:!0}),self.renderer.setSize(self.domElement.clientWidth,self.domElement.clientHeight),self.renderer.shadowMap.enabled=!0,self.domElement.appendChild(self.renderer.domElement),self.setupCamera(),self.setupGeometry(),self.setupLights(),self.setupNavigation(),self.setupSelection(),self.render()},Viewcube.prototype.makeCompass=function(name,x,y,z,radius,segments,color,opacity){var obj=new THREE.Object3D,material=new THREE.MeshBasicMaterial({color:color}),circleGeometry=new THREE.CircleGeometry(radius,segments),circle=new THREE.Mesh(circleGeometry,material);return obj.add(circle),obj.name=name,obj.opacity=opacity,obj.position.x=x,obj.position.y=y,obj.position.z=z,obj},Viewcube.prototype.makeCorner=function(name,w,x,y,z,rotations,color){var face1,face2,face3,geometry,material,obj,self=this;return obj=new THREE.Object3D,geometry=new THREE.PlaneGeometry(w,w),material=new THREE.MeshBasicMaterial({color:color,opacity:self.FACE_OPACITY_MOUSE_OFF,transparent:!0}),face1=new THREE.Mesh(geometry,material),face1.material.side=THREE.DoubleSide,face1.name=name,face1.position.setX(w/2),face1.position.setY(w/2),geometry=new THREE.PlaneGeometry(w,w),face2=new THREE.Mesh(geometry,material),face2.material.side=THREE.DoubleSide,face2.name=name,face2.position.setX(w/2),face2.position.setZ(-w/2),face2.rotateOnAxis(new THREE.Vector3(1,0,0),Math.PI/2),geometry=new THREE.PlaneGeometry(w,w),face3=new THREE.Mesh(geometry,material),face3.material.side=THREE.DoubleSide,face3.name=name,face3.position.setY(w/2),face3.position.setZ(-w/2),face3.rotateOnAxis(new THREE.Vector3(0,1,0),Math.PI/2),obj.add(face1),obj.add(face2),obj.add(face3),obj.name=name,obj.position.x=x,obj.position.y=y,obj.position.z=z,rotations.forEach(function(rotation){obj.rotateOnAxis(rotation.axis,rotation.rad)}),obj},Viewcube.prototype.makeEdge=function(name,w,h,x,y,z,rotations,color){var face1,face2,geometry,material,obj,self=this;return obj=new THREE.Object3D,geometry=new THREE.PlaneGeometry(w,h),material=new THREE.MeshBasicMaterial({color:color,opacity:self.FACE_OPACITY_MOUSE_OFF,transparent:!0}),face1=new THREE.Mesh(geometry,material),face1.material.side=THREE.DoubleSide,face1.name=name,face1.position.setY(h/2),geometry=new THREE.PlaneGeometry(w,h),face2=new THREE.Mesh(geometry,material),face2.material.side=THREE.DoubleSide,face2.name=name,face2.position.setZ(-h/2),face2.rotateOnAxis(new THREE.Vector3(1,0,0),Math.PI/2),obj.add(face1),obj.add(face2),obj.name=name,obj.position.x=x,obj.position.y=y,obj.position.z=z,rotations.forEach(function(rotation){obj.rotateOnAxis(rotation.axis,rotation.rad)}),obj},Viewcube.prototype.makeFace=function(name,w,x,y,z,rotations,color){var self=this,geometry=new THREE.PlaneGeometry(w,w),material=new THREE.MeshBasicMaterial({color:color,opacity:self.FACE_OPACITY_MOUSE_OFF,transparent:!0}),face=new THREE.Mesh(geometry,material);return face.material.side=THREE.DoubleSide,face.name=name,face.position.setX(x),face.position.setY(y),face.position.setZ(z),rotations.forEach(function(rotation){face.rotateOnAxis(rotation.axis,rotation.rad)}),face},Viewcube.prototype.onMouseMove=function(event){var self=this;self.mouse.x=event.offsetX/self.domElement.clientWidth*2-1,self.mouse.y=2*-(event.offsetY/self.domElement.clientHeight)+1,self.raycaster.setFromCamera(self.mouse,self.camera),self.scene.traverse(function(obj){"labels"!==obj.name&&obj.material&&(obj.material.opacity=self.FACE_OPACITY_MOUSE_OFF)});var intersects=self.raycaster.intersectObjects(self.scene.children,!0);intersects.length>0&&"labels"!==intersects[0].object.name&&(intersects[0].object.material.opacity=self.FACE_OPACITY_MOUSE_OVER)},Viewcube.prototype.onMouseOver=function(event){var self=this;requestAnimationFrame(self.render.bind(self))},Viewcube.prototype.onMouseUp=function(event){var self=this;self.mouse.x=event.offsetX/self.domElement.clientWidth*2-1,self.mouse.y=2*-(event.offsetX/self.domElement.clientWidth)+1,self.raycaster.setFromCamera(self.mouse,self.camera),self.selection=[];var intersects=self.raycaster.intersectObjects(self.scene.children,!0);intersects.length>0&&self.setView(intersects[0].object.name)},Viewcube.prototype.render=function(){var self=this;TWEEN.update(),self.renderer.render(self.scene,self.camera)},Viewcube.prototype.setupCamera=function(){var self=this;self.camera=new THREE.PerspectiveCamera(self.fov,self.domElement.clientWidth/self.domElement.clientHeight,.1,1e3),self.camera.position.x=150,self.camera.position.y=150,self.camera.position.z=90,self.camera.up=new THREE.Vector3(0,0,1),self.camera.lookAt(new THREE.Vector3(0,0,0))},Viewcube.prototype.setupGeometry=function(){var self=this,ROTATE_0=0,ROTATE_90=Math.PI/2,ROTATE_180=Math.PI,ROTATE_270=1.5*Math.PI,ROTATE_360=2*Math.PI,X_AXIS=new THREE.Vector3(1,0,0),Y_AXIS=new THREE.Vector3(0,1,0),Z_AXIS=new THREE.Vector3(0,0,1);self.control=new THREE.Object3D,self.cube=new THREE.Object3D;var material1=new THREE.MeshPhongMaterial({color:11184810,map:THREE.ImageUtils.loadTexture("lib/img/top.png"),opacity:1,transparent:!0}),material2=new THREE.MeshPhongMaterial({color:11184810,map:THREE.ImageUtils.loadTexture("lib/img/front.png"),opacity:1,transparent:!0}),material3=new THREE.MeshPhongMaterial({color:11184810,map:THREE.ImageUtils.loadTexture("lib/img/right.png"),opacity:1,transparent:!0}),material4=new THREE.MeshPhongMaterial({color:11184810,map:THREE.ImageUtils.loadTexture("lib/img/back.png"),opacity:1,transparent:!0}),material5=new THREE.MeshPhongMaterial({color:11184810,map:THREE.ImageUtils.loadTexture("lib/img/left.png"),opacity:1,transparent:!0}),material6=new THREE.MeshPhongMaterial({color:11184810,map:THREE.ImageUtils.loadTexture("lib/img/bottom.png"),opacity:1,transparent:!0}),materials=[material2,material5,material3,material4,material1,material6],geometry=new THREE.BoxGeometry(99,99,99),material=new THREE.MeshFaceMaterial(materials),labels=new THREE.Mesh(geometry,material);labels.name="labels",self.scene.add(labels);var topFace=self.makeFace(self.FACES.TOP,70,0,0,50,[{axis:Z_AXIS,rad:ROTATE_90}],self.FACE_COLOUR),frontFace=self.makeFace(self.FACES.FRONT,70,50,0,0,[{axis:Y_AXIS,rad:ROTATE_90},{axis:Z_AXIS,rad:ROTATE_90}],self.FACE_COLOUR),rightFace=self.makeFace(self.FACES.RIGHT,70,0,50,0,[{axis:X_AXIS,rad:ROTATE_270},{axis:Z_AXIS,rad:ROTATE_180}],self.FACE_COLOUR),leftFace=self.makeFace(self.FACES.LEFT,70,0,-50,0,[{axis:X_AXIS,rad:ROTATE_90},{axis:Z_AXIS,rad:ROTATE_360}],self.FACE_COLOUR),backFace=self.makeFace(self.FACES.BACK,70,-50,0,0,[{axis:X_AXIS,rad:ROTATE_90},{axis:Y_AXIS,rad:ROTATE_270}],self.FACE_COLOUR),bottomFace=self.makeFace(self.FACES.BOTTOM,70,0,0,-50,[{axis:Y_AXIS,rad:ROTATE_180},{axis:Z_AXIS,rad:ROTATE_90}],self.FACE_COLOUR),topFrontEdge=self.makeEdge(self.FACES.TOP_FRONT_EDGE,70,15,50,0,50,[{axis:Z_AXIS,rad:ROTATE_90}],self.FACE_COLOUR),topRightEdge=self.makeEdge(self.FACES.TOP_RIGHT_EDGE,70,15,0,50,50,[{axis:Z_AXIS,rad:ROTATE_180}],self.FACE_COLOUR),topBackEdge=self.makeEdge(self.FACES.TOP_BACK_EDGE,70,15,-50,0,50,[{axis:Z_AXIS,rad:ROTATE_270}],self.FACE_COLOUR),topLeftEdge=self.makeEdge(self.FACES.TOP_LEFT_EDGE,70,15,0,-50,50,[{axis:Z_AXIS,rad:ROTATE_360}],self.FACE_COLOUR),bottomFrontEdge=self.makeEdge(self.FACES.BOTTOM_FRONT_EDGE,70,15,50,0,-50,[{axis:Z_AXIS,rad:ROTATE_90},{axis:Y_AXIS,rad:ROTATE_180}],self.FACE_COLOUR),bottomRightEdge=self.makeEdge(self.FACES.BOTTOM_RIGHT_EDGE,70,15,0,50,-50,[{axis:Z_AXIS,rad:ROTATE_180},{axis:Y_AXIS,rad:ROTATE_180}],self.FACE_COLOUR),bottomBackEdge=self.makeEdge(self.FACES.BOTTOM_BACK_EDGE,70,15,-50,0,-50,[{axis:Z_AXIS,rad:ROTATE_270},{axis:Y_AXIS,rad:ROTATE_180}],self.FACE_COLOUR),bottomLeftEdge=self.makeEdge(self.FACES.BOTTOM_LEFT_EDGE,70,15,0,-50,-50,[{axis:Z_AXIS,rad:ROTATE_360},{axis:Y_AXIS,rad:ROTATE_180}],self.FACE_COLOUR),frontRightEdge=self.makeEdge(self.FACES.FRONT_RIGHT_EDGE,70,15,50,50,0,[{axis:X_AXIS,rad:ROTATE_180},{axis:Y_AXIS,rad:ROTATE_90},{axis:Z_AXIS,rad:0}],self.FACE_COLOUR),backRightEdge=self.makeEdge(self.FACES.BACK_RIGHT_EDGE,70,15,-50,50,0,[{axis:X_AXIS,rad:ROTATE_90},{axis:Y_AXIS,rad:ROTATE_180},{axis:Z_AXIS,rad:ROTATE_90}],self.FACE_COLOUR),backLeftEdge=self.makeEdge(self.FACES.BACK_LEFT_EDGE,70,15,-50,-50,0,[{axis:X_AXIS,rad:ROTATE_90},{axis:Y_AXIS,rad:ROTATE_270},{axis:Z_AXIS,rad:ROTATE_90}],self.FACE_COLOUR),frontLeftEdge=self.makeEdge(self.FACES.FRONT_LEFT_EDGE,70,15,50,-50,0,[{axis:X_AXIS,rad:ROTATE_90},{axis:Y_AXIS,rad:ROTATE_360},{axis:Z_AXIS,rad:ROTATE_90}],self.FACE_COLOUR),topFrontLeftCorner=self.makeCorner(self.FACES.TOP_FRONT_LEFT_CORNER,15,50,-50,50,[{axis:Z_AXIS,rad:ROTATE_90}],self.FACE_COLOUR),topFrontRightCorner=self.makeCorner(self.FACES.TOP_FRONT_RIGHT_CORNER,15,50,50,50,[{axis:Z_AXIS,rad:ROTATE_180}],self.FACE_COLOUR),topBackRightCorner=self.makeCorner(self.FACES.TOP_BACK_RIGHT_CORNER,15,-50,50,50,[{axis:Z_AXIS,rad:ROTATE_270}],self.FACE_COLOUR),topBackLeftCorner=self.makeCorner(self.FACES.TOP_BACK_LEFT_CORNER,15,-50,-50,50,[{axis:Z_AXIS,rad:ROTATE_360}],self.FACE_COLOUR),bottomFrontLeftCorner=self.makeCorner(self.FACES.BOTTOM_FRONT_LEFT_CORNER,15,50,-50,-50,[{axis:X_AXIS,rad:ROTATE_0},{axis:Y_AXIS,rad:ROTATE_180},{axis:Z_AXIS,rad:ROTATE_0}],self.FACE_COLOUR),bottomFrontRightCorner=self.makeCorner(self.FACES.BOTTOM_FRONT_RIGHT_CORNER,15,50,50,-50,[{axis:X_AXIS,rad:ROTATE_90},{axis:Y_AXIS,rad:ROTATE_180},{axis:Z_AXIS,rad:ROTATE_0}],self.FACE_COLOUR),bottomBackRightCorner=self.makeCorner(self.FACES.BOTTOM_BACK_RIGHT_CORNER,15,-50,50,-50,[{axis:X_AXIS,rad:ROTATE_90},{axis:Y_AXIS,rad:ROTATE_180},{axis:Z_AXIS,rad:ROTATE_90}],self.FACE_COLOUR),bottomBackLeftCorner=self.makeCorner(self.FACES.BOTTOM_BACK_LEFT_CORNER,15,-50,-50,-50,[{axis:X_AXIS,rad:ROTATE_0},{axis:Y_AXIS,rad:ROTATE_180},{axis:Z_AXIS,rad:ROTATE_90}],self.FACE_COLOUR);self.cube.add(topFace),self.cube.add(frontFace),self.cube.add(rightFace),self.cube.add(backFace),self.cube.add(leftFace),self.cube.add(bottomFace),self.cube.add(topFrontEdge),self.cube.add(topRightEdge),self.cube.add(topBackEdge),self.cube.add(topLeftEdge),self.cube.add(bottomFrontEdge),self.cube.add(bottomRightEdge),self.cube.add(bottomBackEdge),self.cube.add(bottomLeftEdge),self.cube.add(frontRightEdge),self.cube.add(backRightEdge),self.cube.add(backLeftEdge),self.cube.add(frontLeftEdge),self.cube.add(topFrontLeftCorner),self.cube.add(topFrontRightCorner),self.cube.add(topBackRightCorner),self.cube.add(topBackLeftCorner),self.cube.add(bottomFrontLeftCorner),self.cube.add(bottomFrontRightCorner),self.cube.add(bottomBackRightCorner),self.cube.add(bottomBackLeftCorner),self.compass=new THREE.Object3D;var circle=self.makeCompass("compass",0,0,-55,90,64,self.COMPASS_COLOR,self.COMPASS_OPACITY);self.compass.add(circle),self.scene.add(self.cube),self.scene.add(self.compass)},Viewcube.prototype.setupLights=function(){var ambientLight=new THREE.AmbientLight(3684408);this.scene.add(ambientLight);var spotLight=new THREE.SpotLight(16777215);spotLight.position.set(100,140,130),spotLight.intensity=2,this.scene.add(spotLight)},Viewcube.prototype.setupNavigation=function(){},Viewcube.prototype.setupSelection=function(){var self=this;self.domElement.addEventListener("mousemove",self.onMouseMove.bind(self),!1),self.domElement.addEventListener("mouseover",self.onMouseOver.bind(self),!1),self.domElement.addEventListener("mouseup",self.onMouseUp.bind(self),!1)},Viewcube.prototype.setView=function(view){var self=this;switch(view){case self.FACES.TOP:self.tweenCameraToPosition(0,0,self.OFFSET);break;case self.FACES.FRONT:self.tweenCameraToPosition(self.OFFSET,0,0);break;case self.FACES.LEFT:self.tweenCameraToPosition(0,0,self.OFFSET);break;case self.FACES.RIGHT:self.tweenCameraToPosition(self.OFFSET,0,0);break;case self.FACES.BACK:self.tweenCameraToPosition(-self.OFFSET,0,0);break;case self.FACES.BOTTOM:self.tweenCameraToPosition(0,0,-self.OFFSET);break;case self.FACES.TOP_FRONT_EDGE:self.tweenCameraToPosition(0,0,self.OFFSET,0);break;case self.FACES.TOP_BACK_EDGE:console.log(view);break;case self.FACES.TOP_RIGHT_EDGE:console.log(view);break;case self.FACES.TOP_LEFT_EDGE:console.log(view);break;default:console.dir(view)}},Viewcube.prototype.tweenCameraToPosition=function(x,y,z,rx,ry,rz){var self=this;return new Promise(function(resolve){var start={x:self.camera.position.x,y:self.camera.position.y,z:self.camera.position.z},finish={x:x,y:y,z:z},tween=new TWEEN.Tween(start).to(finish,2e3);tween.easing(TWEEN.Easing.Cubic.InOut),tween.onComplete(resolve),tween.onUpdate(function(){self.camera.lookAt(new THREE.Vector3(0,0,0)),self.camera.position.set(this.x,this.y,this.z)}),tween.start(),self.render()})},Viewcube.prototype.tweenControlRotation=function(rx,ry,rz){var self=this;return new Promise(function(resolve){var start={rx:self.control.rotation.x,ry:self.control.rotation.y,rz:self.control.rotation.z},finish={rx:rx,ry:ry,rz:rz},tween=new TWEEN.Tween(start).to(finish,1e3);tween.easing(TWEEN.Easing.Cubic.InOut),tween.onComplete(resolve),tween.onUpdate(function(){self.control.rotation.set(this.rx,this.ry,this.rz,"XYZ")}),tween.start(),self.render()})},Viewcube}();
//# sourceMappingURL=four.min.js.map